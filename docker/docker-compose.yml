version: '3'
services:
  config:
    image: "myregistry.com/1313475/spring-cloud-demo-config"
    ports:
      - "8040:8040"
    env_file:
      - common.env
      - config.env
  zipkin:
    image: "myregistry.com/1313475/spring-cloud-demo-zipkin"
    ports:
      - "8050:8050"
  hystrix:
    image: "myregistry.com/1313475/spring-cloud-demo-hystrix"
    ports:
      - "8060:8060"
  zuul:
    image: "myregistry.com/1313475/spring-cloud-demo-zuul"
    env_file:
      - common.env
    ports:
      - "8070:8070"
  eureka:
    image: "myregistry.com/1313475/spring-cloud-demo-eureka"
    ports:
      - "8080:8080"
    command: dockerize -wait tcp://config:8040 -timeout 120s java -jar spring-cloud-demo-eureka.jar
  turbine-news:
    image: "myregistry.com/1313475/spring-cloud-demo-turbine"
    env_file:
      - common.env
    environment:
      - turbine.app-config=news
  user:
    image: "myregistry.com/1313475/spring-cloud-demo-user-webapi"
    env_file:
      - common.env
      - service.env
    command: dockerize -wait tcp://eureka:8080 -timeout 240s java -jar spring-cloud-demo-user-webapi.jar
  news:
    image: "myregistry.com/1313475/spring-cloud-demo-news-webapi"
    env_file:
      - common.env
      - service.env
    command: dockerize -wait tcp://eureka:8080 -timeout 240s java -jar spring-cloud-demo-news-webapi.jar